<project name="ZF2" default="build">

    <property name="appDir" value="." />
    <property name="moduleDir" value="${basedir}/module/" />
    <property name="buildDir" value="${basedir}/.build" />
    <property name="logsDir" value="${basedir}/logs" />
    <property name="vendorDir" value="${basedir}/vendor/bin" />

    <property name="hostname" value=""/>
    <property name="database" value=""/>
    <property name="username" value=""/>
    <property name="password" value=""/>
    <property name="port" value=""/>

    <property environment="env"/>

    <target name="prepare" depends="configs">
        <delete dir="${buildDir}"/>
        <mkdir dir="${appDir}/logs"/>
        <mkdir dir="${logsDir}"/>
        <mkdir dir="${logsDir}/phpcb"/>
    </target>

    <target name="configs">
        <property name="forceConfig" value="true" />
        <copy overwrite="true" file="${basedir}/config/autoload/local.php.dist" tofile="${basedir}/config/autoload/local.php"></copy>
        <copy overwrite="true" file="${basedir}/config/autoload/testing.php.dist" tofile="${basedir}/config/autoload/testing.php"></copy>
        <copy overwrite="true" file="${basedir}/public/.htaccess.sample" tofile="${basedir}/public/.htaccess"></copy>

        <exec dir="${basedir}" executable="php"  failonerror="true" output="${logsDir}/composer.log">
            <arg line="install.sh" />
        </exec>

        <antcall target="config-update">
            <param name="file" value="${appDir}/config/autoload/testing.php"/>
        </antcall>
    </target>

    <target name="config-update">
        <replace file="${file}">
            <replacefilter token="{HOSTNAME}" value="${hostname}"/>
            <replacefilter token="{DATABASE}" value="${database}"/>
            <replacefilter token="{USERNAME}" value="${username}"/>
            <replacefilter token="{PASSWORD}" value="${password}"/>
            <replacefilter token="{PORT}" value="${port}"/>
        </replace>
    </target>

    <target name="composer" description="Install dependencies with composer" depends="prepare">
        <exec executable="/bin/bash" output="${logsDir}/composer.log">
            <arg value="-c" />
            <arg value="curl -s https://getcomposer.org/installer | php" />
        </exec>
        <exec dir="${basedir}" executable="php"  failonerror="true" output="${logsDir}/composer.log">
            <arg line="composer.phar install --dev" />
            <arg line="--dev" />
            <arg line="--prefer-dist" />
        </exec>
        <exec dir="${basedir}" executable="php"  failonerror="true" output="${logsDir}/composer.log">
            <arg line="composer.phar update --dev" />
        </exec>
        <antcall target="configs" />
        <antcall target="publish" />
    </target>

    <target name="phpcs" description="PHP_CodeSniffer">
        <exec dir="${moduleDir}" executable="${vendorDir}/phpcs" failonerror="false" osfamily="unix" output="${logsDir}/phpcs.log">
            <arg line="--tab-width=4" />
            <arg line="--report=checkstyle" />
            <arg line="--standard=PSR2" />
            <arg line="--extensions=php"/>
            <arg line="--ignore=js"/>
            <arg line="--report-file=${logsDir}/phpcs.xml" />
            <arg line="${appDir}" />
        </exec>
        <echo message="##teamcity[importData type='checkstyle' path='${logsDir}/phpcs.xml']" />
        <antcall target="publish" />
    </target>

    <target name="phpcb" description="PHP_CodeBrowser">
        <exec dir="${moduleDir}" executable="${vendorDir}/phpcb" failonerror="false" osfamily="unix">
            <arg line="--log ${logsDir}" />
            <arg line="--source ${moduleDir}" />
            <arg line="--output ${logsDir}/phpcb" />
        </exec>
        <zip destfile="${logsDir}/phpcb.zip" basedir="${logsDir}/phpcb" />
        <delete dir="${logsDir}/phpcb"/>
        <antcall target="publish" />
    </target>

    <target name="phpunit" description="PHPUnit">
        <mkdir dir="${logsDir}/coverage"/>
        <property name="junit" value="${logsDir}/tests-report.xml" />
        <!--<property name="env.APP_ENV" value="testing"/>-->
        <exec executable="${vendorDir}/phpunit" dir="${appDir}" failonerror="true" osfamily="unix" output="${logsDir}/phpunit.log">
            <env key="APP_ENV" value="testing"/>
            <arg line="-c ${moduleDir}/Options/test/phpunit.xml"/>
            <arg line="--log-junit '${logsDir}/tests-report.xml'"/>
            <arg line="--coverage-clover '${logsDir}/phpunit.clover.xml'"/>
            <arg line="--coverage-html '${logsDir}/coverage'"/>
        </exec>
        <zip destfile="${logsDir}/coverage.zip" basedir="${logsDir}/coverage"/>
        <antcall target="publish" />
    </target>

    <target name="publish">
        <echo message="##teamcity[publishArtifacts '${logsDir}/']" />
        <echo message="##teamcity[publishArtifacts '${appDir}/logs/']" />
    </target>

    <target name="build" depends="prepare, phpunit, phpcs, phpcb">
    </target>

</project>